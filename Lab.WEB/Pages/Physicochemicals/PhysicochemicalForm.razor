@inject SweetAlertService swal

<NavigationLock OnBeforeInternalNavigation="OnBeforeInternalNavigation"></NavigationLock>

<EditForm EditContext="editContext" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator />

    <div class="mb-3">
        <label>Residuo de Clurudo:</label>
        <div>
            <InputText class="form-control" @bind-Value="@Physicochemical.ResidualChlorine" />
            <ValidationMessage For="@(() => Physicochemical.ResidualChlorine)" />
        </div>
    </div>

    <div class="mb-3">
        <label>Irca:</label>
        <div>
            <InputText class="form-control" @bind-Value="@Physicochemical.Irca" />
            <ValidationMessage For="@(() => Physicochemical.Irca)" />
        </div>
    </div>

    <div class="mb-3">
        <label>Turbidez:</label>
        <div>
            <InputText class="form-control" @bind-Value="@Physicochemical.Turbidity" />
            <ValidationMessage For="@(() => Physicochemical.Turbidity)" />
        </div>
    </div>

    <div class="mb-3">
        <label>PH:</label>
        <div>
            <InputText class="form-control" @bind-Value="@Physicochemical.Ph" />
            <ValidationMessage For="@(() => Physicochemical.Ph)" />
        </div>
    </div>

   

   
    <div class="mb-3">
        <label>Fecha Recolección:</label>
        <div>
            <InputText class="form-control" @bind-Value="@Physicochemical.CollectorDate" />
            <ValidationMessage For="@(() => Physicochemical.CollectorDate)" />
        </div>
    </div>

    <div class="mb-3">
        <label>Fecha de Ingreso de la Muestra al Laboratorio:</label>
        <div>
            <InputText class="form-control" @bind-Value="@Physicochemical.AdmissionDate" />
            <ValidationMessage For="@(() => Physicochemical.AdmissionDate)" />
        </div>
    </div>
    @*<div class="mb-3">
        <label>Residuo de Clorudo:</label>
        <div>
            <InputText class="form-control" @bind-Value="@Physicochemical. " />
            <ValidationMessage For="@(() => Physicochemical.ResidualChlorine)" />
        </div>
    </div>*@

    <button class="btn btn-primary" type="submit">Guardar Cambios</button>
    <button class="btn btn-success" @onclick="ReturnAction">Regresar</button>
</EditForm>

<!--Llave C#-->
@code {
private EditContext editContext = null!;

    protected override void OnInitialized()
    {
        editContext = new(Physicochemical);
    }


    [EditorRequired]
    [Parameter]
    public Physicochemical Physicochemical { get; set; } = null!;

    // El boton hace el submit
    [EditorRequired]
    [Parameter]
    public EventCallback OnValidSubmit { get; set; }

    // El boton hace el regreso a la pagina anterior
    [EditorRequired]
    [Parameter]
    public EventCallback ReturnAction { get; set; }

    public bool FormPostedSuccessfully { get; set; } = false;

    private async Task OnBeforeInternalNavigation(LocationChangingContext context)
    {
        var formWasEdited = editContext.IsModified();

        if (!formWasEdited)
        {
            return;
        }

        if (FormPostedSuccessfully)
        {
            return;
        }

        var result = await swal.FireAsync(new SweetAlertOptions
            {
                Title = "Confirmación",
                Text = "¿Está seguro de abandonar la página? (podrias perder los cambios..)",
                Icon = SweetAlertIcon.Warning,
                ShowCancelButton = true
            });

        var confirm = !string.IsNullOrEmpty(result.Value);

        if (confirm)
        {
            return;
        }

        context.PreventNavigation();
    }

}